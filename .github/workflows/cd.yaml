name: CD

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
    summarize-pull-request:
      name: Summarize pull request
      uses: ./.github/workflows/summarize-pull-request.yaml
    
    check-pull-request:
      name: Check pull request
      needs: [summarize-pull-request]
      runs-on: ubuntu-latest
      outputs:
        version-bump: ${{ steps.check-pull-request.outputs.version-bump }}
      steps:
        - name: Check pull request
          id: check-pull-request
          run: |
            if [[ ${{ needs.summarize-pull-request.outputs.summary }} =~ ^.*# (BREAKING[ -]CHANGES).* ]]; then
              version-bump="major"
            elif [[ ${{ needs.summarize-pull-request.outputs.summary }} =~ ^.*# (Feature).* ]]; then
              version-bump="minor"
            elif [[ ${{ needs.summarize-pull-request.outputs.summary }} =~ ^.*# (Build|Bug Fix|Performance|Refactor).* ]]; then
              version-bump="patch"
            else
              version-bump="none"
            fi
            echo "version-bump: $version-bump"
            echo "version-bump=$version-bump" >> $GITHUB_ENV

    tests:
      name: Run tests
      uses: ./.github/workflows/tests.yaml
      needs: [check-pull-request]

    version:
      name: Version
      uses: ./.github/workflows/version.yaml
      needs: [check-pull-request, tests]
      if: ${{ needs.tests.result == 'success'  && needs.check-pull-request.outputs.version-bump != 'none'}}
      with:
        version-bump: ${{ needs.check-pull-request.outputs.version-bump }}

    build:
      name: Build
      uses: ./.github/workflows/build.yaml
      needs: [check-pull-request, tests, version]
      if: ${{ needs.tests.result == 'success'  && needs.check-pull-request.outputs.version-bump != 'none'}}

    release:
      name: Release
      uses: ./.github/workflows/release.yaml
      needs: [check-pull-request, tests, version, build]
      if: ${{ needs.tests.result == 'success'  && needs.check-pull-request.outputs.version-bump != 'none'}}
      with:
        version: ${{ needs.version.outputs.new-version }}
        pr_body: ${{ github.event.pull_request.body }}