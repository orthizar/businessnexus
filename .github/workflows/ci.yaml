name: CI

on:
  pull_request:
    branches:    
      - main
    types: 
      - opened
      - reopened
      - edited
  push:

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      version_bump: ${{ steps.version_bump.outputs.VERSION_BUMP }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine version bump
        id: version_bump
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          MAJOR_WORDING="BREAKING[ -]CHANGE|major"
          MINOR_WORDING="feat|minor"
          PATCH_WORDING="fix|patch"
          VERSION_BUMP=""
          if [[ $COMMIT_MESSAGE =~ ^($MAJOR_WORDING|$MINOR_WORDING)(\(.*\))?: ]]; then
            if [[ $COMMIT_MESSAGE =~ ($MAJOR_WORDING) ]]; then
              VERSION_BUMP="major"
            else
              VERSION_BUMP="minor"
            fi
          elif [[ $COMMIT_MESSAGE =~ ^($PATCH_WORDING)(\(.*\))?: ]]; then
            VERSION_BUMP="patch"
          else
            VERSION_BUMP="none"
          fi
          echo "VERSION_BUMP=$VERSION_BUMP" >> $GITHUB_OUTPUT
        
      - name: Update pubspec version
        if: ${{ steps.version_bump.outputs.VERSION_BUMP != 'none' }}
        id: pubspec_version
        uses: stikkyapp/update-pubspec-version@v1
        with:
          bump-build: true
          strategy: ${{ steps.version_bump.outputs.VERSION_BUMP }}
      
      - name: Push pubspec version
        if: ${{ steps.version_bump.outputs.VERSION_BUMP != 'none' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./pubspec.yaml
          git commit -m "ci: pubspec version bump from ${{ steps.pubspec_version.outputs.old-version }} to ${{ steps.pubspec_version.outputs.new-version }} [skip ci]"
          git push

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs: [versioning]
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Get dependencies
        run: flutter pub get

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Flutter analyze
        run: flutter analyze

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [versioning]
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/.pub-cache
          key: pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Get dependencies
        run: flutter pub get

      - name: Flutter test
        run: flutter test

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [versioning, analyze, test]
    if: ${{ needs.versioning.outputs.version_bump != 'none' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/.pub-cache
          key: pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build apk
        run: flutter build apk

      - name: Build apk split per abi
        run: flutter build apk --split-per-abi
      
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build-android
          path: |
            build/app/outputs/flutter-apk/*

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: [versioning, analyze, test]
    if: ${{ needs.versioning.outputs.version_bump != 'none' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Get dependencies
        run: flutter pub get
      
      - run: flutter config --enable-windows-desktop
      
      - name: Build windows
        run: flutter build windows

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: |
            build/windows/runner/Release/*